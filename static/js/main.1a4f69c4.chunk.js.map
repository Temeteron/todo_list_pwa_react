{"version":3,"sources":["components/style.jsx","components/layout/Header.jsx","components/TodoItem.jsx","components/Todos.jsx","components/AddTodo.jsx","components/pages/About.jsx","App.jsx","registerServiceWorker.js","index.js"],"names":["style","app","maxWidth","alignItems","justifyContent","flexDirection","headerStyle","background","color","textAlign","padding","linkStyle","textDecoration","btnStyle","border","borderRadius","cursor","float","noborder","borderStyle","textWhiteCenter","Header","react_default","a","createElement","Link","to","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","props","todo","completed","inherits","createClass","key","value","_this$props$todo","id","title","type","onChange","markComplete","bind","checked","onClick","delTodo","Component","Todos","todos","map","components_TodoItem","AddTodo","state","onSubmit","e","preventDefault","addTodo","setState","defineProperty","target","name","display","className","flex","placeholder","About","Fragment","href","rel","App","initObj","saveToLocalForage","toConsumableArray","filter","newToDo","uuid","_this2","localForage","getItem","then","res","setItem","initLocalForage","_this3","HashRouter","basename","layout_Header","Route","exact","path","render","components_AddTodo","components_Todos","component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","console","log","onSuccess","catch","error","ReactDOM","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"mSAqCeA,EArCD,CACVC,IAAK,CACDC,SAAU,IACVC,WAAY,SACZC,eAAgB,SAChBC,cAAe,UAInBC,YAAa,CACTC,WAAY,OACZC,MAAO,OACPC,UAAW,SACXC,QAAS,QAEbC,UAAW,CACPH,MAAO,OACPI,eAAgB,QAEpBC,SAAU,CACNN,WAAY,UACZC,MAAO,OACPM,OAAQ,OACRJ,QAAS,UACTK,aAAc,MACdC,OAAQ,UACRC,MAAO,SAEXC,SAAU,CACNC,YAAa,QAEjBC,gBAAiB,CACbZ,MAAO,QACPC,UAAW,WCnBJY,MATf,WACE,OACEC,EAAAC,EAAAC,cAAA,UAAQxB,MAAOA,EAAMM,aACnBgB,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzB,MAAOA,EAAMW,UAAWe,GAAG,KAAjC,QAFF,MAEqDJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAMzB,MAAOA,EAAMW,UAAWe,GAAG,UAAjC,WC4B1CC,EAjCf,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,SAAW,WACT,MAAO,CACLtC,WAAY,OACZC,MAAO,QACPE,QAAS,OACTK,aAAY,QACZH,eAAgBkB,EAAKgB,MAAMC,KAAKC,UAAY,eAAiB,SAPnElB,EAAA,OAAAC,OAAAkB,EAAA,EAAAlB,CAAAJ,EAAAC,GAAAG,OAAAmB,EAAA,EAAAnB,CAAAJ,EAAA,EAAAwB,IAAA,SAAAC,MAAA,WAWW,IAAAC,EAC0BpB,KAAKa,MAAMC,KAApCO,EADDD,EACCC,GAAIC,EADLF,EACKE,MAAOP,EADZK,EACYL,UACnB,OACE1B,EAAAC,EAAAC,cAAA,OAAKxB,MAAOiC,KAAKY,YACfvB,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,SAAOgC,KAAK,WAAWxD,MAAOA,EAAMkB,SAAUuC,SAAUxB,KAAKa,MAAMY,aAAaC,KAAK1B,KAAMqB,GAAKM,QAASZ,IAD3G,IAC0H,IACtHO,EACFjC,EAAAC,EAAAC,cAAA,UAAQqC,QAAS5B,KAAKa,MAAMgB,QAAQH,KAAK1B,KAAMqB,GAAKtD,MAAOA,EAAMa,UAAUS,EAAAC,EAAAC,cAAA,qBAlBrFG,EAAA,CAA8BoC,aCefC,mLAdJ,IAAAlC,EAAAG,KACP,OAAOA,KAAKa,MAAMmB,MAAMC,IAAI,SAACnB,GAAD,OAC1BzB,EAAAC,EAAAC,cAAC2C,EAAD,CAAUhB,IAAKJ,EAAKO,GAAIP,KAAMA,EAAMW,aAAc5B,EAAKgB,MAAMY,aAAcI,QAAShC,EAAKgB,MAAMgB,mBAHjFC,qBCwCLK,SAxCf,SAAAxC,GAAA,SAAAwC,IAAA,IAAAvC,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmC,GAAA,QAAAlC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAqC,IAAA1B,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEgC,MAAQ,CACNd,MAAO,IAFXzB,EAKEwC,SAAW,SAACC,GACVA,EAAEC,iBACF1C,EAAKgB,MAAM2B,QAAQ3C,EAAKuC,MAAMd,OAC9BzB,EAAK4C,SAAS,CAAEnB,MAAO,MAR3BzB,EAWE2B,SAAW,SAACc,GAAD,OAAOzC,EAAK4C,SAAL3C,OAAA4C,EAAA,EAAA5C,CAAA,GAAiBwC,EAAEK,OAAOC,KAAON,EAAEK,OAAOxB,SAX9DtB,EAAA,OAAAC,OAAAkB,EAAA,EAAAlB,CAAAqC,EAAAxC,GAAAG,OAAAmB,EAAA,EAAAnB,CAAAqC,EAAA,EAAAjB,IAAA,SAAAC,MAAA,WAcI,OACE9B,EAAAC,EAAAC,cAAA,QAAM8C,SAAUrC,KAAKqC,SAAUtE,MAAO,CAAE8E,QAAS,QAAUC,UAAU,aACnEzD,EAAAC,EAAAC,cAAA,SACEgC,KAAK,OACLqB,KAAK,QACL7E,MAAO,CAAEgF,KAAM,KAAMtE,QAAS,MAAOK,aAAc,QAASI,YAAa,QACzE8D,YAAY,eACZ7B,MAAOnB,KAAKoC,MAAMd,MAClBE,SAAUxB,KAAKwB,WAEjBnC,EAAAC,EAAAC,cAAA,SACEgC,KAAK,SACLJ,MAAM,SACN2B,UAAU,YACV/E,MAAO,CAACgF,KAAM,YA5BxBZ,EAAA,CAA6BL,cCcdmB,MAff,WACE,OACE5D,EAAAC,EAAAC,cAACF,EAAAC,EAAM4D,SAAP,KACE7D,EAAAC,EAAAC,cAAA,MAAIxB,MAAOA,EAAMoB,iBAAjB,SACAE,EAAAC,EAAAC,cAAA,KAAGxB,MAAOA,EAAMoB,iBACdE,EAAAC,EAAAC,cAAA,2FAEFF,EAAAC,EAAAC,cAAA,KAAGxB,MAAOA,EAAMoB,iBACfE,EAAAC,EAAAC,cAAA,KAAG4D,KAAK,iCAAiCR,OAAO,SAASS,IAAI,sBAAsBrF,MAAO,CAACQ,MAAO,YAAlG,iBC+FQ8E,6MA7FbjB,MAAQ,CACNJ,MAAO,MAGTsB,QAAU,CACN,CACEjC,GAAI,EACJC,MAAO,gBACPP,WAAW,GAEb,CACEM,GAAI,EACJC,MAAO,gBACPP,WAAW,GAEb,CACEM,GAAI,EACJC,MAAO,gBACPP,WAAW,MA2BjBU,aAAe,SAACJ,GACdxB,EAAK4C,SAAS,CAAET,MAAOnC,EAAKuC,MAAMJ,MAAMC,IAAI,SAAAnB,GAI1C,OAHGA,EAAKO,KAAOA,IACbP,EAAKC,WAAaD,EAAKC,WAElBD,KAEP,kBAAMjB,EAAK0D,yBAIf1B,QAAU,SAACR,GACTxB,EAAK4C,SAAS,CAAET,MAAMlC,OAAA0D,EAAA,EAAA1D,CAAKD,EAAKuC,MAAMJ,MAAMyB,OAAO,SAAA3C,GAAI,OAAIA,EAAKO,KAAOA,MACrE,kBAAMxB,EAAK0D,yBAIff,QAAU,SAAClB,GACT,IAAIoC,EAAU,CACZpC,QACAP,WAAW,EACXM,GAAIsC,OAGN9D,EAAK4C,SAAS,CAAET,MAAK,GAAArB,OAAAb,OAAA0D,EAAA,EAAA1D,CAAMD,EAAKuC,MAAMJ,OAAjB,CAAwB0B,KAC3C,kBAAM7D,EAAK0D,wGA/CG,IAAAK,EAAA5D,KAChB6D,IAAYC,QAAQ,SAASC,KAAK,SAAAC,GACrB,MAAPA,EACFJ,EAAKnB,SAAS,CAAET,MAAOgC,IAEvBH,IAAYI,QAAQ,QAASL,EAAKN,SAASS,KAAK,SAACC,GAC/CJ,EAAKnB,SAAS,CAAET,MAAOgC,oDAQ7BH,IAAYI,QAAQ,QAASjE,KAAKoC,MAAMJ,mDAIxChC,KAAKkE,mDAgCE,IAAAC,EAAAnE,KACP,OACEX,EAAAC,EAAAC,cAAC6E,EAAA,EAAD,CAAYC,SAAS,KACnBhF,EAAAC,EAAAC,cAAA,OAAKxB,MAAOA,EAAMC,KAChBqB,EAAAC,EAAAC,cAAA,OAAKuD,UAAU,aACbzD,EAAAC,EAAAC,cAAC+E,EAAD,MACAjF,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAA7D,GAAK,OACjCxB,EAAAC,EAAAC,cAACF,EAAAC,EAAM4D,SAAP,KACE7D,EAAAC,EAAAC,cAACoF,EAAD,CAASnC,QAAS2B,EAAK3B,UACvBnD,EAAAC,EAAAC,cAACqF,EAAD,CAAO5C,MAAOmC,EAAK/B,MAAMJ,MAAOP,aAAc0C,EAAK1C,aAAcI,QAASsC,EAAKtC,cAGnFxC,EAAAC,EAAAC,cAACgF,EAAA,EAAD,CAAOE,KAAK,SAASI,UAAW5B,cAtF1BnB,aCAZgD,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAkCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTtB,KAAK,SAAA2B,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBxD,QACfmD,UAAUC,cAAcO,WAGtBT,GAAUA,EAAOU,UACnBV,EAAOU,SAASN,IAMlBO,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOa,WACnBb,EAAOa,UAAUT,UAO5BU,MAAM,SAAAC,GACLJ,QAAQI,MAAM,4CAA6CA,KChFjEC,IAAS5B,OAAOrF,EAAAC,EAAAC,cAACgH,EAAD,MAASC,SAASC,eAAe,SDiBlC,SAAkBnB,GAC/B,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAIC,uBAAwB3B,OAAOC,SAAS9B,MACpDyD,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAO6B,iBAAiB,OAAQ,WAC9B,IAAMxB,EAAK,GAAA1E,OAAMgG,uBAAN,sBAEP7B,GAqDV,SAAiCO,EAAOC,GAEtCwB,MAAMzB,GACHtB,KAAK,SAAAgD,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5C7B,UAAUC,cAAc6B,MAAMtD,KAAK,SAAA2B,GACjCA,EAAa4B,aAAavD,KAAK,WAC7BiB,OAAOC,SAASsC,aAKpBnC,EAAgBC,EAAOC,KAG1Bc,MAAM,WACLH,QAAQC,IACN,mEA1EAsB,CAAwBnC,EAAOC,GAI/BC,UAAUC,cAAc6B,MAAMtD,KAAK,eAInCqB,EAAgBC,EAAOC,MCxC/BmC","file":"static/js/main.1a4f69c4.chunk.js","sourcesContent":["const style = {\n    app: {\n        maxWidth: 1000,\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        // border: `2px solid black`,\n        // borderRadius: `25px`,\n    },\n    headerStyle: {\n        background: '#333',\n        color: '#fff',\n        textAlign: 'center',\n        padding: '10px'\n    },\n    linkStyle: {\n        color: '#fff',\n        textDecoration: 'none'\n    },\n    btnStyle: {\n        background: '#CC0000',\n        color: '#fff',\n        border: 'none',\n        padding: '5px 9px',\n        borderRadius: '50%',\n        cursor: 'pointer',\n        float: 'right'\n    },\n    noborder: {\n        borderStyle: 'none'\n    },\n    textWhiteCenter: {\n        color: 'white',\n        textAlign: 'center'\n    }\n};\n\nexport default style;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport style from '../style';\n\n\nfunction Header() {\n  return (\n    <header style={style.headerStyle}>\n      <h1>TodoList</h1>\n      <Link style={style.linkStyle} to=\"/\">Home</Link> | <Link style={style.linkStyle} to=\"/about\">About</Link>\n    </header>\n  )\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport style from './style';\n\nexport class TodoItem extends Component {\n  getStyle = () => {\n    return {\n      background: '#333',\n      color: 'white',\n      padding: '10px',\n      borderRadius: `100px`,\n      textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n    }\n  }\n\n  render() {\n    const { id, title, completed } = this.props.todo;\n    return (\n      <div style={this.getStyle()}>\n        <p>\n          <input type=\"checkbox\" style={style.noborder} onChange={this.props.markComplete.bind(this, id)} checked={completed} /> {' '}\n          { title }\n          <button onClick={this.props.delTodo.bind(this, id)} style={style.btnStyle}><b>X</b></button>\n        </p>\n      </div>\n    )\n  }\n}\n\n// PropTypes\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired,\n}\n\n\nexport default TodoItem\n","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n  render() {\n    return this.props.todos.map((todo) => (\n      <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo} />\n    ));\n  }\n}\n\n// PropTypes\nTodos.propTypes = {\n  todos: PropTypes.array.isRequired,\n  markComplete: PropTypes.func.isRequired,\n  delTodo: PropTypes.func.isRequired,\n}\n\nexport default Todos;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport '../App.css';\n\nexport class AddTodo extends Component {\n  state = {\n    title: ''\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    this.props.addTodo(this.state.title);\n    this.setState({ title: '' });\n  }\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    return (\n      <form onSubmit={this.onSubmit} style={{ display: 'flex' }} className=\"container\">\n        <input \n          type=\"text\" \n          name=\"title\" \n          style={{ flex: '10', padding: '5px', borderRadius: '100px', borderStyle: 'none' }}\n          placeholder=\"Add Todo ...\" \n          value={this.state.title}\n          onChange={this.onChange}\n        />\n        <input \n          type=\"submit\" \n          value=\"Submit\" \n          className=\"btn round\"\n          style={{flex: '1'}}\n        />\n      </form>\n    )\n  }\n}\n\n// PropTypes\nAddTodo.propTypes = {\n  addTodo: PropTypes.func.isRequired\n}\n\nexport default AddTodo\n","import React from 'react';\nimport style from '../style';\n\nfunction About() {\n  return (\n    <React.Fragment>\n      <h1 style={style.textWhiteCenter}>About</h1>\n      <p style={style.textWhiteCenter}>\n        <i>A pwa to-do list developed in React. All of your data will be stored locally.</i>\n      </p>\n      <p style={style.textWhiteCenter}>\n      \t<a href=\"http://dimitris.greasidis.com/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{color: '#0EDAE4'}}>Dgreasidis</a>\n      </p>\n    </React.Fragment>\n  )\n}\n\n\nexport default About;","import React, { Component } from 'react';\nimport { Route, HashRouter } from 'react-router-dom';\nimport uuid from 'uuid';\nimport localForage from 'localforage';\nimport Header from './components/layout/Header';\nimport Todos from './components/Todos';\nimport AddTodo from './components/AddTodo';\nimport style from './components/style';\nimport About from './components/pages/About';\nimport './App.css';\n\n\nclass App extends Component {\n  state = {\n    todos: []\n  }\n\n  initObj = [\n      {\n        id: 1,\n        title: 'ToDo number 1',\n        completed: false\n      },\n      {\n        id: 2,\n        title: 'ToDo number 2',\n        completed: true\n      },\n      {\n        id: 3,\n        title: 'ToDo number 3',\n        completed: false\n      }\n  ]\n\n\n  initLocalForage() {\n    localForage.getItem('todos').then(res => {\n      if (res != null) {\n        this.setState({ todos: res });\n      } else {\n        localForage.setItem('todos', this.initObj).then((res) => {\n          this.setState({ todos: res });\n        });\n      }\n    });\n    // localForage.clear();\n  }\n\n  saveToLocalForage() {\n    localForage.setItem('todos', this.state.todos);\n  }\n\n  componentDidMount() {\n    this.initLocalForage();\n  }\n\n  // Toggle Complete\n  markComplete = (id) => {\n    this.setState({ todos: this.state.todos.map(todo => {\n      if(todo.id === id) {\n        todo.completed = !todo.completed\n      }\n      return todo;\n    }) },\n      () => this.saveToLocalForage());\n  }\n\n  // Delete Todo\n  delTodo = (id) => {\n    this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)] },\n      () => this.saveToLocalForage());\n  }\n\n  // Add Todo\n  addTodo = (title) => {\n    let newToDo = {\n      title,\n      completed: false,\n      id: uuid()\n    };\n\n    this.setState({ todos: [...this.state.todos, newToDo] },\n      () => this.saveToLocalForage());\n  }\n\n  render() {\n    return (\n      <HashRouter basename='/'>\n        <div style={style.app}>\n          <div className=\"container\">\n            <Header />\n            <Route exact path=\"/\" render={props => (\n              <React.Fragment>\n                <AddTodo addTodo={this.addTodo} />\n                <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo} />\n              </React.Fragment>\n            )} />\n            <Route path=\"/about\" component={About} />\n          </div>  \n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}